name: deploy-gas-webapp

# ─────────────────────────────────────────────────────
# 同時実行を 1 本に制限（並列で競合 push しない）
# ─────────────────────────────────────────────────────
concurrency:
  group: deploy-gas-webapp
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - '.github/workflows/**'

permissions:
  contents: write     # 自動バンプ用 push に必要

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

    steps:
    # 1. Checkout
    - uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 1        # デフォルト
        fetch-tags: false

    # 2. Node.js + npm cache
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    # 3. Install deps (再現性◎)
    - run: npm ci

    # 4. Read package version → GitHub Output（安全な多行シェル）
    - id: ver
      shell: bash
      run: |
        VERSION=$(node -p 'require("./package.json").version')
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

    # 5. Inject __BUILD_VERSION__ in Code.gs（コミットしない）
    - name: Inject build version
      run: |
        BUILD="v${{ steps.ver.outputs.VERSION }}"
        sed -i "s/__BUILD_VERSION__/${BUILD}/" src/Code.gs

    # 6. Run tests
    - run: npm test

    # 7. Install clasp & jq
    - run: npm i -g @google/clasp@latest
    - run: sudo apt-get update -y && sudo apt-get install -y jq

    # 8. Authenticate clasp
    - run: |
        mkdir -p ~/.config
        echo "${CLASPRC_JSON}" > ~/.clasprc.json

    # 9. Push to GAS & create version
    - run: |
        set -eux
        clasp push --force
        clasp version "v${{ steps.ver.outputs.VERSION }}"

    # 10. Update existing Web-App deployment
    - run: |
        set -eux
        VNUM=$(clasp versions --json | jq -r '.[0].versionNumber')
        clasp update-deployment "$DEPLOYMENT_ID" \
          --versionNumber "$VNUM" \
          --description "v${{ steps.ver.outputs.VERSION }} (auto-deploy)"

    # 11. Bump patch for next dev cycle & push (安全に上書き)
    - if: ${{ success() }}
      run: |
        set -eux
        npm version patch -m "chore: bump to %s [skip ci]"
        git config user.name github-actions
        git config user.email github-actions@github.com
        git push --follow-tags --force-with-lease
