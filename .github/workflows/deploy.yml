name: deploy-gas-webapp
on:
  push:
    branches: [ main ]

jobs:
  deploy-gas-webapp:
    runs-on: ubuntu-latest
    env:
      CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install clasp
        run: npm install --global @google/clasp@latest

      - name: Configure clasp auth
        run: |
          mkdir -p ~/.config
          echo "${CLASPRC_JSON}" > ~/.clasprc.json

      - name: Push & Deploy as Web App
        id: deploy
        run: |
          set -eux

          # 1) ファイルをアップロード
          clasp push --force

          # 2) バージョンを作成して番号を抽出
          NEW_VER=$(
            clasp version "auto-$(date +%Y%m%d%H%M%S)" \
              | grep -oE "[0-9]+" | head -n1
          )
          if [ -z "$NEW_VER" ]; then
            echo "Failed to retrieve version number" >&2
            exit 1
          fi
          echo "→ 新しいバージョン番号: $NEW_VER"

          # 3) “既存”のウェブアプリ (DEPLOYMENT_ID) に上書きデプロイ
          clasp deploy \
            --deploymentId "${DEPLOYMENT_ID}" \
            --versionNumber "${NEW_VER}" \
            --description "auto-deploy from GitHub Actions"

          # 4) 固定URLに ?page=login を付けて出力
          FINAL_URL="https://script.google.com/macros/s/${DEPLOYMENT_ID}/exec?page=login"
          echo "✅ Web アプリ最新版の URL: ${FINAL_URL}"

          # GitHub Actions の出力値にも渡しておく
          echo "webapp_url=${FINAL_URL}" >> "$GITHUB_OUTPUT"

      - name: Show output webapp_url
        run: |
          echo "==== 出力された webapp_url ===="
          echo "${{ steps.deploy.outputs.webapp_url }}"
