# .github/workflows/deploy-gas-webapp.yml
name: deploy-gas-webapp

# ── 同一ブランチでは直列実行（途中でキャンセルしない）
concurrency:
  group: deploy-gas-webapp
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - '.github/workflows/**'

permissions:
  contents: write   # 自動コミット用

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

    steps:
    # 1. Checkout
    - uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 1

    # 2. Node.js + npm キャッシュ
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm

    # 3. Install dependencies
    - run: npm ci

    # 4. Get package version（シェルブロックでクォート崩れを防止）
    - id: ver
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

    # 5. Inject build version into Code.gs
    - run: sed -i "s/__BUILD_VERSION__/v${{ steps.ver.outputs.VERSION }}/" src/Code.gs

    # 6. Unit tests
    - run: npm test

    # 7. Tools (clasp & jq)
    - run: |
        npm i -g @google/clasp@latest
        sudo apt-get update -y && sudo apt-get install -y jq

    # 8. clasp auth
    - run: |
        mkdir -p ~/.config
        echo "${CLASPRC_JSON}" > ~/.clasprc.json

    # 9. 重複ファイル衝突を事前に回避（例：escapeHtml.js が生成物の場合）
    - run: |
        if [ -f "src/shared/escapeHtml.js" ]; then
          rm -f src/shared/escapeHtml.js
        fi

    # 10. Push to GAS & create new version
    - run: |
        set -eux
        clasp push --force
        clasp version "v${{ steps.ver.outputs.VERSION }}"

    # 11. Update existing Web-App deployment
    - run: |
        set -eux
        VNUM=$(clasp versions | grep -E '^[0-9]+' | awk '{print $1}' | sort -nr | head -n1)
        clasp update-deployment "$DEPLOYMENT_ID" \
          --versionNumber "$VNUM" \
          --description "v${{ steps.ver.outputs.VERSION }} (auto-deploy)"

    # 12. Commit build artefacts & bump patch for next dev cycle
    - if: success()
      run: |
        set -eux
        git config user.name github-actions
        git config user.email github-actions@github.com

        # ① まず今回のビルド分をコミット
        git add src/Code.gs
        git commit -m "build: embed v${{ steps.ver.outputs.VERSION }} [skip ci]" --no-verify

        # ② ここでワークツリーがクリーンになったので npm version OK
        npm version patch -m "chore: bump to %s [skip ci]" --no-verify

        # ③ Push タグ＋コミット
        git pull --rebase --autostash origin main
        git push --follow-tags --force-with-lease
