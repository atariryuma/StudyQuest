# .github/workflows/gas-push.yml
name: gas-push

concurrency:
  group: gas-push
  cancel-in-progress: false    # 同ブランチを常に直列実行

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - '.github/workflows/**'

permissions:
  contents: write              # バージョン自動コミット用

env:
  NODE_VERSION: 20
  CLASP_VERSION: latest        # 必要に応じて固定化

jobs:
  push:
    runs-on: ubuntu-latest

    env:
      CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}

    steps:
    # ──────────────────────────────────────────────
    # 1. checkout
    - uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 1

    # 2. node
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # 3. deps & tests
    - run: npm ci

    # 4. package.json version を安全に取得
    - id: ver
      run: |
        echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

    # 5. build-version を挿入
    - run: sed -i "s/__BUILD_VERSION__/v${{ steps.ver.outputs.VERSION }}/" src/Code.gs

    # 6. jest
    - run: npm test

    # ──────────────────────────────────────────────
    # 7. clasp & jq
    - run: |
        npm i -g @google/clasp@${{ env.CLASP_VERSION }}
        sudo apt-get update -y
        sudo apt-get install -y jq

    # 8. clasp auth
    - run: |
        mkdir -p ~/.config
        echo "$CLASPRC_JSON" > ~/.clasprc.json

    # 9. （必要なら）残存 escapeHtml を事前削除  ※clasp v2 用
    - name: Delete remote escapeHtml if present
      run: |
        set -eux
        clasp list | awk '$2=="escapeHtml"{print $1}' \
          | while read -r ID; do
              clasp delete "$ID" --yes
            done

    # 10. push
    - name: Push to GAS
      run: |
        set -eux
        clasp push --force
