name: Deploy GAS as Web App

on:
  push:
    branches:
      - main

jobs:
  deploy-gas-webapp:
    name: Deploy GAS \u2192 overwrite existing Web App deployment
    runs-on: ubuntu-latest

    env:
      # GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u767b\u9304\u6e08\u307f
      CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

    steps:
      # 1) \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c1\u30a7\u30c3\u30af\u30a2\u30a6\u30c8
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2) Node.js \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08clasp \u304c Node.js \u4e0a\u306e CLI \u306a\u306e\u3067\u5fc5\u8981\uff09
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 3) clasp \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb
      - name: Install clasp (latest)
        run: npm install --global @google/clasp@latest

      # 4) CLASPRC_JSON (\u8a8d\u8a3c\u60c5\u5831) \u3092 ~/.clasprc.json \u306b\u66f8\u304d\u51fa\u3057
      - name: Configure ~/.clasprc.json for clasp authentication
        run: |
          mkdir -p ~/.config
          echo "${CLASPRC_JSON}" > ~/.clasprc.json
        # CLASPRC_JSON \u306f Secrets \u304b\u3089\u6e21\u3063\u3066\u304f\u308b OAuth/SvcAcct \u60c5\u5831\u306e JSON \u5168\u6587

      # 5) \u30bd\u30fc\u30b9\u3092 push \u2192 \u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u4f5c\u6210 \u2192 \u65e2\u5b58 deploymentId \u306b\u4e0a\u66f8\u304d\u30c7\u30d7\u30ed\u30a4
      - name: Push & Deploy as Web App
        id: deploy
        run: |
          set -eux

          # 5-1) \u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u3092 Apps Script \u306b\u5f37\u5236\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9
          clasp push --force

          # 5-2) \u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u756a\u53f7\u3092\u5909\u6570\u306b\u5165\u308c\u308b
          #      grep/awk \u3092\u540c\u3058\u884c\u306b\u66f8\u304d\u3001\u6539\u884c\u3067\u30d1\u30a4\u30d7\u304c\u58ca\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b
          NEW_VER=$(
            clasp version "auto-$(date +%Y%m%d%H%M%S)" \
              | grep 'Created version number:' \
              | awk '{print $4}'
          )
          if [ -z "$NEW_VER" ]; then
            echo "Failed to retrieve version number" >&2
            exit 1
          fi
          echo "\u2192 \u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7: $NEW_VER"

          # 5-3) \u65e2\u5b58\u306e DEPLOYMENT_ID \u3092\u6307\u5b9a\u3057\u3066\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3060\u3051\u7f6e\u304d\u63db\u3048\uff08\u4e0a\u66f8\u304d\u66f4\u65b0\uff09
          clasp deploy \
            --deploymentId "${DEPLOYMENT_ID}" \
            --versionNumber "${NEW_VER}" \
            --description "auto-deploy from GitHub Actions"

          # 5-4) \u516c\u958b URL \u3092\u7d44\u307f\u7acb\u3066 (\u30af\u30a8\u30ea ?page=login \u3092\u672b\u5c3e\u306b\u8ffd\u52a0)
          FINAL_URL="https://script.google.com/macros/s/${DEPLOYMENT_ID}/exec?page=login"
          echo "\u2705 Web \u30a2\u30d7\u30ea\u6700\u65b0\u7248\u306e URL: ${FINAL_URL}"

          # GitHub Actions \u306e\u51fa\u529b\u5024\u306b\u3082\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f
          echo "webapp_url=${FINAL_URL}" >> "$GITHUB_OUTPUT"

      # 6) \uff08\u4f8b\uff09\u51fa\u529b\u3055\u308c\u305f URL \u3092\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u5229\u7528
      - name: Show output webapp_url
        run: |
          echo "==== \u51fa\u529b\u3055\u308c\u305f webapp_url ===="
          echo "${{ steps.deploy.outputs.webapp_url }}"
